name: CI

on:
  push:
    branches: [ master ]
  pull_request:

jobs:
  build:
    name: Build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
        java-version: [ 8, 11, 14 ]
      fail-fast: false
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/wrapper
            ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle.*') }}
          restore-keys: |
            gradle-${{ runner.os }}
            gradle-
      - name: Set up JDK ${{ matrix.java-version }}
        uses: actions/setup-java@v1
        with:
          java-version: ${{ matrix.java-version }}
      - name: Prepare
        run: ./gradlew clean dependencies
      - name: Build
        run: ./gradlew assemble testClasses
      - name: Test
        run: ./gradlew test
      - name: Publish Test Report
        uses: scacap/action-surefire-report@v1
        if: failure()
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          report_paths: '**/build/test-results/test/TEST-*.xml'
          check_name: Test Failures (${{ matrix.os }}, ${{ matrix.java-version }})

  release:
    name: Release Check
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 14
      - name: Release Check
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_GITHUB_TOKEN }}
        run: npx semantic-release

